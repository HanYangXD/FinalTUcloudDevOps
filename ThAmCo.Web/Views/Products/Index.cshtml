
@model ThAmCo.Web.Models.ProductBrandViewModel

@using Microsoft.AspNetCore.Identity
@using ThAmCo.Auth.Models

@inject SignInManager<ThAmCo.Auth.Data.Account.AppUser> SignInManager
@inject UserManager<ThAmCo.Auth.Data.Account.AppUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="Products" asp-action="Index" method="get">
    <p>

        <select asp-for="ProductBrand" asp-items="Model.Brands">
            <option value="">Brand</option>
        </select>

        <select asp-for="ProductCategory" asp-items="Model.Categories">
            <option value="">Category</option>
        </select>

        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Price)
            </th>
            @if (SignInManager.IsSignedIn(User)) { 
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].StockLevel)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Brand)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                @if (SignInManager.IsSignedIn(User))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.StockLevel)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Active)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand.Name)
                </td>
                @*@if (User.IsInRole("Customer")) {*@ 
                    <td>
                        
                            @if(User.IsInRole("Admin")||User.IsInRole("Staff")){
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> }
                        
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                            @if (User.IsInRole("Admin") || User.IsInRole("Staff"))
                            {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>}
                    </td>
                @*}*@
            </tr>
        }
    </tbody>
</table>
